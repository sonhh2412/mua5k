{
  "name": "firebase",
  "version": "3.7.6",
  "description": "Firebase JavaScript library for web and Node.js",
  "author": {
    "name": "Firebase",
    "email": "firebase-support@google.com",
    "url": "https://firebase.google.com/"
  },
  "license": "SEE LICENSE IN https://firebase.google.com/terms/",
  "homepage": "https://firebase.google.com/",
  "keywords": [
    "authentication",
    "database",
    "Firebase",
    "firebase",
    "realtime",
    "storage"
  ],
  "repository": {
    "type": "none",
    "url": "https://firebase.google.com/"
  },
  "main": "firebase-node.js",
  "dependencies": {
    "dom-storage": "^2.0.2",
    "faye-websocket": "^0.11.1",
    "jsonwebtoken": "^7.3.0",
    "promise-polyfill": "^6.0.2",
    "xmlhttprequest": "^1.8.0"
  },
  "browser": "firebase-browser.js",
  "react-native": "firebase-react-native.js",
  "types": "firebase.d.ts",
  "readme": "# Firebase Javascript SDK\n\nThe Firebase JavaScript SDK implements the client-side libraries used by\napplications using Firebase services. This SDK is distributed via:\n\n- CDN (`<script src=\"https://www.gstatic.com/firebasejs/3.6.4/firebase.js\"></script>`)\n- [npm package](https://www.npmjs.com/package/firebase)\n- [Bower package](https://github.com/firebase/firebase-bower)\n\nTo get starting using Firebase, see\n[Add Firebase to your JavaScript Project](https://firebase.google.com/docs/web/setup).\n\n## SDK Dev Workflow\n\n### Prerequisites\n\nBefore you can start working on the Firebase JS SDK, you need to have Node.js 4.0 or \ngreater installed on your machine. After doing this, you must also install the \ndependencies for this package.\n\nTo download Node.js visit https://nodejs.org/en/download/.\n\nOnce you've verified that you are using version 4.0 or later (run `node -v` to see your\ncurrent running version of Node.js), you can install the dependencies by running:\n\n```bash\n$ npm install\n```\n\n_NOTE: This package also maintains a `yarn.lock` so you can get faster installs by installing\ndependencies with `yarn` instead._\n\n### Pipeline Instructions\n\nThe Firebase JS SDK is built and tested through a gulp pipeline. You will need to\nhave the `gulp` command available on your system to run the tasks yourself.\n\nTo install `gulp` simply run:\n\n```bash\n$ npm install -g gulp-cli\n```\n\n_NOTE: Installing `gulp-cli` is optional as you can simply leverage the npm commands\nfor most interactions._\n\n## Gulp Pipeline\n\nMost of the tasks for interacting with the SDK are defined through gulp. If you\ninstalled gulp globally, you can run the following to see all of the available\ngulp tasks:\n\n```bash\ngulp --tasks\n```\n\n## Testing the SDK\n\nTo run all tests for the SDK simply run: `npm test` at the root of this package. \n\nThere are several types of available tests:\n\n- Unit Tests (`gulp test:unit`)\n- Smoke Tests (`gulp test:smoke`)\n- Integration Tests (`gulp test:integration`)\n\n_NOTE: You can execute each of these tasks on their own (e.g. you can run \n`gulp test:unit` to run exclusively the smoke tests from your CLI)_\n\n### Integration Tests\n\nThe integration tests are designed to run against a live Firebase instance. Because\nof this a little pre-config is required.\n\n1. Create a `project.json`\n\nThis file should be placed in `tests/integration/config` and should contain your\nFirebase project's config options. \n\nVisit https://console.firebase.google.com/, select the project you wish to test \nwith, and click the \"Add Firebase to your web app\" affordance to get this config.\n\n_i.e._\n\n```json\n{\n  \"apiKey\": \"---\",\n  \"authDomain\": \"---\",\n  \"databaseURL\": \"---\",\n  \"projectId\": \"---\",\n  \"storageBucket\": \"---\",\n  \"messagingSenderId\": \"---\"\n}\n```\n\n2. Create a `key.json`\n\nThis file should be placed in `tests/integration/config`. This script should be a valid service\naccount for your firebase project.\n\nYou can follow the instructions [here](https://firebase.google.com/docs/admin/setup#add_firebase_to_your_app)\nto create a valid service account for your project.\n\n## Building the SDK\n\n### Introduction\n\nThe Javascript SDK is built through a gulp pipeline.\n\nTo build the project run `npm run build` in your CLI.\n\nThis will generate all of the output assets in a `/dist` folder available at the\nroot of this project.\n\nEach of the different types of source files are explained more in detail below.\n\n### Source File Handling\n\nOur source files are all located in the `/src` directory. This currently contains\na variety of different sources (typescript, prebuilt binaries, legacy). We handle\neach of these cases in our gulp pipeline.\n\n#### Typescript Source\n\nThis is the planned source language for this repo. As we are able, all components\nwill be migrated to typescript and processed in the following flow:\n\n1. TS Files are compiled to ES6 using the Typescript compiler\n1. ES6 Files are transpiled to CJS Modules using Babel\n1. CJS Modules are attached to a window global using Webpack\n\n#### Prebuilt Binaries\n\nTo allow firebase to build from Github we consume prebuilt binaries of our components\nuntil the source is migrated to this repo.\n\nThese files are processed in the following flow:\n\n1. Prebuilt browser binaries are ready to consume individually in the browser\nhowever we need to wrap them in a CJS module wrapper for node/webpack/browserify\nconsumption.\n1. The Firebase App binary is generated (from TS) and concatenated with the \nbrowser binaries of each individual module to create `firebase.js`.\n\n#### Legacy Files\n\nThese files are here to simply allow for backwards compatibility and are simply\nmoved into their required locations\n\n\n## Contributing\n\nSee [Contributing](.github/CONTRIBUTING.md) for more information on contributing to the Firebase\nJavaScript SDK.\n",
  "readmeFilename": "README.md",
  "_id": "firebase@3.7.6",
  "dist": {
    "shasum": "551cb7d3aa42c077c54c341d1a685f8e0fe81ec6"
  },
  "_from": "firebase@",
  "_resolved": "https://registry.npmjs.org/firebase/-/firebase-3.7.6.tgz"
}
