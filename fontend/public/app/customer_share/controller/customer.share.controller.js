'use strict'; angular.module('shopnxApp') .controller('CustomerShareCtrl', function($scope, $rootScope, CustomerSharing, Auth, $mdDialog) {$rootScope.parmas = {home : false, waiting_result : false, restricted_area : false, customer_share : true, forum : false, help : false, }; $rootScope.isPageProduct = false; $rootScope.isHomePage = false; $scope.countSharing = {number:0}; $scope.pathUrl = '/api/sharing/get-list-sharing'; $scope.pathUrl_tmp = '/api/sharing/get-list-sharing-tmp'; $scope.urlSharingList = $scope.pathUrl; $rootScope.$watch('isLoggedIn', function(data){$scope.currentUser = Auth.getCurrentUser(); }); CustomerSharing.getCountSharing.get().$promise.then(function(result){$scope.countSharing = result; }); $scope.UpLikeSharing = function(sharing_id) {if (!$rootScope.isLoggedIn) {$mdDialog.show({templateUrl: '/app/cart/views/login.tpl.html', parent: angular.element(document.body), clickOutsideToClose: true, fullscreen: true }) } else {CustomerSharing.UpLikeSharing.query({sharing_id:sharing_id, user_id:$scope.currentUser._id}). $promise.then(function(result){if ($scope.urlSharingList === $scope.pathUrl) $scope.urlSharingList = $scope.pathUrl_tmp; else $scope.urlSharingList = $scope.pathUrl; }); } }; var md = new MobileDetect(window.navigator.userAgent); $scope.doTheBack = function() {window.history.back(); } ; $scope.isMobile = false; $scope.isnotMobile = true; if(md.mobile() != null){$scope.isMobile = true; $scope.isnotMobile = false; } }) .controller('CustomerShareBySlugCtrl', function($scope, $rootScope, CustomerSharing, $stateParams, Auth, $location, $mdDialog) {$rootScope.parmas = {home : false, waiting_result : false, restricted_area : false, customer_share : true, forum : false, help : false, }; $rootScope.isPageProduct = false; $rootScope.isHomePage = false; $scope.reloadWinner = false; $scope.isOtherSharing = false; var getSharingContent = function() {CustomerSharing.getSharingContentBySlug.get({slug: $stateParams.slug }) .$promise.then(function(result){$scope.sharing = result; }) .catch(function(err){$location.path('/'); }); }; var getListNewSharing = function(user_id) {CustomerSharing.getListNewSharing.query({user_id: user_id }) .$promise.then(function(result){$scope.new_sharings = result; }); }; var getListByProduct = function(product_id, sharing_id) {CustomerSharing.getListByProduct.get({product_id: product_id, sharing_id: sharing_id }) .$promise.then(function(result) {$scope.list_winner_sharing = result; }); }; var getListSharingByUser = function() {CustomerSharing.getListSharingByUser.query({id:$scope.sharing.user[0]._id, sharing_id: $scope.sharing._id}). $promise.then(function(result){$scope.other_sharing = result; if ($scope.other_sharing.length > 0) $scope.isOtherSharing = true; else $scope.isOtherSharing = false; }); }; CustomerSharing.UpViewSharing.get({ slug: $stateParams.slug }) .$promise.then(function(rel){getSharingContent(); }); $scope.$watch('sharing', function(sharing){if(typeof sharing != 'undefined'){$scope.urlListComment1 = '/api/sharing/get-comment-sharing/'+sharing._id; $scope.urlListComment2 = '/api/sharing/get-comment-sharing-2/'+sharing._id; $scope.urlListComment = $scope.urlListComment1; $scope.urlListWinner = '/api/sharing/getListByProduct?product_id='+sharing.product[0].id+'&sharing_id='+sharing._id; getListSharingByUser(); getListByProduct(sharing.product[0].id, sharing._id); getListNewSharing(sharing.user[0]._id); } }); $scope.isAddCommentOpen = false; $scope.isMessNotLogin = false; Auth.isLoggedInAsync(function(cb){if(!cb){$scope.isAddCommentOpen = false; $scope.isMessNotLogin = true; }else{$scope.isAddCommentOpen = true; $scope.isMessNotLogin = false; $scope.session = {_id : Auth.getCurrentUser()._id }; } }); $rootScope.$watch('isLoggedIn', function(data){if (data) {$scope.session = {_id : Auth.getCurrentUser()._id }; } else {$scope.session = {}; } }) ; var showDialogLogin = function() {$mdDialog.show({templateUrl: '/app/cart/views/login.tpl.html', parent: angular.element(document.body), clickOutsideToClose: true, fullscreen: true }); }; $scope.submit = function(){if(!$rootScope.isLoggedIn) {showDialogLogin(); } else {$scope.session.sharing_id = $scope.sharing._id; CustomerSharing.UpCommentSharing.save($scope.session) .$promise.then(function(result){getSharingContent(); delete $scope.session.sharing_id; delete $scope.session.comment_content; if ($scope.urlListComment === $scope.urlListComment1) $scope.urlListComment = $scope.urlListComment2; else $scope.urlListComment = $scope.urlListComment1; }).catch(function(err){}); } }; $scope.UpLikeListSharing = function(sharing_id, user_id) {if(!$rootScope.isLoggedIn) {showDialogLogin(); } else {CustomerSharing.UpLikeSharing.query({sharing_id:sharing_id, user_id:user_id}). $promise.then(function(result){getListSharingByUser(); }); } }; $scope.UpLikeSharing = function(sharing_id, user_id) {if(!$rootScope.isLoggedIn) {showDialogLogin(); } else {CustomerSharing.UpLikeSharing.query({sharing_id:sharing_id, user_id:user_id}). $promise.then(function(result){getSharingContent(); }); } }; var md = new MobileDetect(window.navigator.userAgent); $scope.doTheBack = function() {window.history.back(); } ; $scope.isMobile = false; $scope.isnotMobile = true; if(md.mobile() != null){$scope.isMobile = true; $scope.isnotMobile = false; } });