'use strict'; angular.module('shopnxApp') .directive('forumUser', function ($loading , $timeout , Auth) {return {restrict: 'E', scope: {user : '=', collection: '='}, link: function (scope, element, attribute) {scope.$watch('user',function(item) {if(item){Auth.getUserbyId(item) .then(function(result){if(result != null){scope.collection = result; } }) .catch(function(err){}); } }); } }; }) .directive('countForum', function ($loading , $timeout , Forum) {return {restrict: 'E', scope: {idcate : '=', collection: '='}, link: function (scope, element, attribute) {scope.$watch('idcate',function(id) {if(id){Forum.countListForumbyCate.get({id: id }) .$promise.then(function(result) {scope.collection = result; }) .catch(function(err){}); } }); } }; }) .directive('forumRight', function ($loading , $timeout , Forum, Auth) {return {restrict: 'E', scope: {data: '='}, templateUrl: 'app/forum/views/tpl.forum.right.html', link: function (scope, element, attribute) {scope.isLogin = false; scope.isNotLogin = false; Auth.isLoggedInAsync(function(cb){if(!cb){scope.isLogin = false; scope.isNotLogin = true; }else{scope.isLogin = true; scope.isNotLogin = false; scope.datauserlogin = {_id : Auth.getCurrentUser()._id, avatar : Auth.getCurrentUser().avatar, fullname : Auth.getCurrentUser().fullname }; } }); Forum.listPostHot.query() .$promise.then(function(result) {scope.dataforumhot = result; }) .catch(function(err){}); Forum.listUserPostmost.query() .$promise.then(function(resultmost) {scope.datausermost = resultmost; }) .catch(function(err){}); } }; })