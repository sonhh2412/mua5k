'use strict'; angular.module('shopnxApp') .controller('ProductDetailCtrl', function(Auth, $loading, $scope, $stateParams, Product, $location, socket,  $window, Cart, $rootScope, $mdDialog, $interval, CustomerSharing, $timeout) {$window.scrollTo(0, 0); $rootScope.parmas = {home : false, waiting_result : false, restricted_area : false, customer_share : false, forum : false, help : false, }; $scope.noSessionSelling = false; $rootScope.isHomePage = false; $rootScope.stateParams = $stateParams; $loading.start('lazy-product'); $rootScope.isPageProduct = true; Auth.isLoggedInAsync(function(cb){$rootScope.isLoggedIn = cb; cb ? ($rootScope.getCurrentUser = Auth.getCurrentUser(), $scope.filterUser = function(item){return item.user._id === $rootScope.getCurrentUser._id }, $scope.filterUserNot = function(item){return item.user._id !== $rootScope.getCurrentUser._id } ) : ($scope.filterUser = function(item){return false }, $scope.filterUserNot = function(item){return true } ) }); var md = new MobileDetect(window.navigator.userAgent); $scope.doTheBack = function() {window.history.back(); } ; $scope.isMobile = false; $scope.isnotMobile = true; if(md.mobile() != null){$scope.isMobile = true; $scope.isnotMobile = false; } $scope.url_share = $location.absUrl(); $scope.limitUser = 10; $scope.limitMe = 12; $scope.currentUser = Auth.getCurrentUser(); $scope.duration = 1; Product.getSlug.get({slug : $stateParams.slug }).$promise .then(function(result){result ? ($scope.product = result ) : ($location.path("/") ); socket.socket.on('product:save', function (item) {$scope.product._id === item._id && ($scope.product = item, !$scope.product.published && $location.path("/") ); }); Product.getSessionSelling.get({id : $scope.product.id }).$promise .then(function(session){$loading.finish('lazy-product'); $scope.session_selling = session; $scope.session_selling.code = _.size($scope.session_selling.code) > 0 ? $scope.session_selling.code.reverse() : []; $scope.countLoop = _.filter($scope.session_selling.code, function(item){return typeof $rootScope.getCurrentUser === 'undefined' ?  true : item.user._id !== $rootScope.getCurrentUser._id }); $scope.lineTime = 0; var promise = $interval(function(){$scope.session_selling.selled === 0 ? ($interval.cancel(promise) ) : ($scope.lineTime += 1, (($scope.session_selling.selled / $scope.session_selling.total) * 100) <= $scope.lineTime && $interval.cancel(promise) ) },1); socket.socket.on('product:buy', function(item) {var promise = null; $scope.duration = 0; $scope.product.id === item.product_id.id && ($scope.session_selling.selled = item.selled, promise = $interval(function(){$scope.session_selling.selled === 0 ? ($interval.cancel(promise) ) : ($scope.lineTime += 1, (($scope.session_selling.selled / $scope.session_selling.total) * 100) <= $scope.lineTime && $interval.cancel(promise) ) },1), $rootScope.isPageProduct && item.product_id.slug === $rootScope.stateParams.slug && $scope.session_selling.selled === $scope.session_selling.total && $location.path('/san-pham/' + $stateParams.slug + '/' + item.session_id + '.html') ); }); socket.socket.on('product:session_code', function(item) {if($scope.stateParams.slug === item.slug){$scope.session_selling.code.unshift(item.session_code); $scope.countLoop = _.filter($scope.session_selling.code, function(item){return typeof $rootScope.getCurrentUser === 'undefined' ?  true : item.user._id !== $rootScope.getCurrentUser._id }); var orderList = null, marginTmp = 0, timeOut = null; !$rootScope.isLoggedIn && ($scope.limitUser = 11, orderList = angular.element(document.querySelector("#UserBuyNewListUser")), orderList.css({ 'margin-top' : '-37px'}), marginTmp = -37, timeOut = $interval(function(){marginTmp += 1; orderList.css({ 'margin-top' : marginTmp}); marginTmp === 0 && ($interval.cancel(timeOut) , $scope.limitUser = 10); }) ); $rootScope.isLoggedIn && (item.session_code.user._id !== $rootScope.getCurrentUser._id ? ($scope.limitUser = 11, orderList = angular.element(document.querySelector("#UserBuyNewListUser")), orderList.css({ 'margin-top' : '-37px'}), marginTmp = -37, timeOut = $interval(function(){marginTmp += 1; orderList.css({ 'margin-top' : marginTmp}); marginTmp === 0 && ($interval.cancel(timeOut) , $scope.limitUser = 10); }) ) : ($scope.limitMe = 13, orderList = angular.element(document.querySelector("#UserBuyNewListMy")), orderList.css({ 'margin-top' : '-32px'}), marginTmp = -32, timeOut = $interval(function(){marginTmp += 1; orderList.css({ 'margin-top' : marginTmp}); marginTmp === 0 && ($interval.cancel(timeOut) , $scope.limitMe = 12); }, 20) ) ); } }); $scope.takePart = 1; $rootScope.product_detail_qty = {id_product : result.id, qty : $scope.takePart } ; $scope.addKFast = function(kAmount){$scope.takePart = kAmount; $rootScope.product_detail_qty = {id_product : result.id, qty : $scope.takePart } } ; $scope.changQty = function(add){!add ? $scope.takePart = $scope.takePart - 1 : $scope.takePart = $scope.takePart + 1; $scope.takePart < 0 ? $scope.takePart = 0 : $scope.takePart = $scope.takePart; $rootScope.product_detail_qty = {id_product : result.id, qty : $scope.takePart } }; $scope.changQtyInput = function(){var watting = $scope.session_selling.total - $scope.session_selling.selled; typeof $scope.takePart === 'undefined' ? $scope.takePart = watting : $scope.takePart = $scope.takePart; $rootScope.product_detail_qty = {id_product : result.id, qty : $scope.takePart } } }) .catch(function(err){$scope.noSessionSelling = true; $loading.finish('lazy-product'); }); }) .catch(function(err){$location.path("/"); }); var flyToElement = function (flyer, flyingTo, parentElem, callBack) {var $func = $(this); var divider = 2; var flyerClone = flyer.clone(); flyerClone.css({position: 'absolute', top: parentElem.offset().top - 50 + "px", left: parentElem.offset().left + "px", 'z-index': 1000, width : '50px', 'border-radius' : '100%'}); angular.element('body').append(flyerClone); var gotoX = flyingTo.offset().left + (flyingTo.width() / 2) - (flyer.width() / divider) / 2; var gotoY = flyingTo.offset().top + (flyingTo.height() / 2) - (flyer.height() / divider) / 2; flyer.hide(); flyerClone.animate({opacity: 0.7, left: gotoX, top: gotoY, width: flyer.width() / divider, height: flyer.height() / divider }, 1000, function() {angular.element('.border-card').addClass('shakeit'); flyingTo.fadeOut('fast', function() {flyingTo.fadeIn('fast', function() {flyerClone.fadeOut('fast', function() {flyerClone.remove(); if (callBack != null) {angular.element('.border-card').removeClass('shakeit'); callBack.apply($func); } }); }); }); }); }; $scope.addToCart = function(event, product, amount) {var imgClone = angular.element('<img src="' + angular.element(document.querySelector("#zoom_03")).attr('src') + '"/>'); angular.element(document.querySelector(".consume-addcar")).append(imgClone); flyToElement(imgClone, angular.element(document.getElementsByClassName("nav-cart-effect")), angular.element(document.querySelector(".consume-addcar")) , function(callback) {imgClone.remove(); Cart.addItem(product, $rootScope.product_detail_qty.qty, amount); $rootScope.sizeCart = _.size(Cart.idArray); }); }; $scope.kMua = function(event, product, amount) {if(! $rootScope.isLoggedIn){$mdDialog.show({templateUrl: '/app/cart/views/login.tpl.html', parent: angular.element(document.body), targetEvent: event, clickOutsideToClose: true, fullscreen: true }) } else{product.image = angular.element(document.querySelector("#zoom_03")).attr('src'); $rootScope.product_10kmua = {product: product, amount : amount} ;$mdDialog.show({templateUrl: '/app/cart/views/buy.product.now.html', parent: angular.element(document.body), targetEvent: event, clickOutsideToClose: true, fullscreen: true }) } }; var hiddenCodeDiv = function(){angular.element(document.querySelector("#divRnoShow")).hide(); }; var showCodeDiv=function(a){var b=angular.element(document.querySelector("#divRnoShow")),c=angular.element(document.querySelector(".j-custom"));switch(c.removeClass("j-top"),c.removeClass("j-bottom"),a%9){case 0:b.css({top:"8px"}),c.addClass("j-top");break;case 1:b.css({top:"8px"});break;case 2:b.css({top:"50px"});break;case 3:b.css({top:"91px"});break;case 4:b.css({top:"134px"});break;case 5:b.css({top:"176px"});break;case 6:b.css({top:"217px"});break;case 7:b.css({top:"259px"});break;case 8:b.css({top:"259px"}),c.addClass("j-bottom")}angular.element(document.querySelector("#divRnoShow")).show()}; $scope.scrollbarConfig =  {theme: 'dark', autoHideScrollbar: false, setHeight: 155, scrollInertia: 0, axis: 'y', advanced: {updateOnContentResize: false }, scrollButtons: {scrollAmount: 'auto', enable: false } }; $scope.scrollbarConfigSession =  {theme: 'dark', autoHideScrollbar: false, setHeight: 471, scrollInertia: 0, axis: 'yx', advanced: {updateOnContentResize: false }, scrollButtons: {scrollAmount: 'auto', enable: false } }; $scope.close_show_code = function(){hiddenCodeDiv(); }; $scope.show_code = function(event, code, user, index){hiddenCodeDiv(); $scope.popCodeList = code; $scope.popUserDetail = user; showCodeDiv(index); }; $scope.tabIndex = 0; $scope.moveToSecondTab = function(){$scope.tabIndex = 1; $window.scrollTo(0, document.querySelector("#div_menu").offsetTop); } })